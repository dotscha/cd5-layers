HEADERS = Bitmap.H Graphic.H BitmapObject.H Scene.H Code.H 3D.H
BMPS = images/icos_out.bmp images/ball.bmp images/ball_dark.bmp
ASM_SRC = !player.asm anim.asm anim3d.asm font.asm irq.asm main.asm music.asm scroll.asm

LOGO = images/logo_chronos_boti.prg

AS = ./ass.sh
EXO = ~/exo209/src/exomizer
EXO_FX = -x1
MKD64 = ~/mkd64/bin/mkd64

YAPE = echo

FLAGS = -O3 -Wall

all : exp

run : main.prg
	$(YAPE) main.prg &

run_exo : main_exo.prg
	$(YAPE) main_exo.prg &

main_exo.prg : main.prg
	$(EXO) sfx basic -t4 $(EXO_FX) -o main_exo.prg main.prg

main.prg : $(ASM_SRC) scene_code.asm obj_coords.asm logo.prg texture_thetra.asm
	$(AS) main

comp: layer

scene_code.asm: layer $(BMPS)
	./layer code

obj_coords.asm: layer
	./layer coords

texture_thetra.asm: layer
	./layer texture

gen_code: layer $(BMPS)
	./layer code

gen_coords: layer
	./layer coords

clean:
	rm *.prg *.bmp scene_*.asm layers.asm *coord*.asm node_triangs.asm texture*.asm main.inc main.lst layer *.d64 || true

logo.prg: $(LOGO)
	cp $(LOGO) logo.prg

disk.d64: main.prg
	$(MKD64) -o disk.d64 -m cbmdos -i " 2016" -d "CD5 - DEMO DISK" -f main.prg -n LAYERS -w

disk_exo.d64: main_exo.prg
	$(MKD64) -o disk_exo.d64 -m cbmdos -i " 2016" -d "CD5 - DEMO DISK" -f main_exo.prg -n LAYERS -w

export: disk.d64
	cp disk.d64 /sdcard/

export_exo: disk_exo.d64
	cp disk_exo.d64 /sdcard/

exp: export export_exo
	cp main_exo.prg /sdcard/

zip-src: clean
	zip cd5-layers-src.zip README.md Makefile.android ass.sh default.ini *.asm *.H *.C $(BMPS) $(LOGO)

zip-all: main.prg
	rm scene_bg.* || true
	zip cd5-layers-all.zip README.md Makefile.android ass.sh default.ini *.asm *.H *.C *.prg $(BMPS) $(LOGO)


% : %.C $(HEADERS)
	g++ $(FLAGS) -o $@ $@.C

